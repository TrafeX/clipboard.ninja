name: Test & deploy application

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build images
        run: |-
          docker build --target=build -t trafex/clipboard-backend:ci backend/
          docker build -t trafex/clipboard-backend:latest backend/
          docker build -t trafex/clipboard-frontend:latest frontend/

      - name: Test images
        run: |-
          docker run -e CI=true -t --rm trafex/clipboard-frontend yarn lint
          docker run -e CI=true -t --rm trafex/clipboard-backend:ci npm run eslint
          docker run -e CI=true --rm trafex/clipboard-frontend yarn test-coverage
          docker run -e CI=true -t --rm -v `pwd`/build:/usr/src/app/build trafex/clipboard-frontend yarn build
          docker run -d trafex/clipboard-backend
          docker run -d trafex/clipboard-frontend
          docker ps -a

      - name: Run Trivy vulnerability scanner on backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'trafex/clipboard-backend:latest'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push backend image
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |-
          docker push trafex/clipboard-backend:latest

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy static site to S3 bucket
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |-
            aws s3 sync ./build/ s3://clipboard.ninja --delete
            aws s3 sync ./build/static s3://clipboard.ninja/static --cache-control max-age=31536000,public


