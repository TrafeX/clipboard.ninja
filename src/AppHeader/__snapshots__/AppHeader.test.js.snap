// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with a link to Help 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppHeader
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "pathname": "/",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <AppBar
        iconElementLeft={
          <img
            alt="logo"
            height="50px"
            src="ninja.svg"
          />
        }
        iconElementRight={
          <FlatButton
            disabled={false}
            fullWidth={false}
            href="/about.html"
            label="Help"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
          />
        }
        onTitleClick={[Function]}
        showMenuIconButton={true}
        title="Clipboard.ninja"
        zDepth={1}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "iconElementLeft": <img
          alt="logo"
          height="50px"
          src="ninja.svg"
        />,
        "iconElementRight": <FlatButton
          disabled={false}
          fullWidth={false}
          href="/about.html"
          label="Help"
          labelPosition="after"
          labelStyle={Object {}}
          onClick={[Function]}
          onKeyboardFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onTouchStart={[Function]}
          primary={false}
          secondary={false}
        />,
        "onTitleClick": [Function],
        "showMenuIconButton": true,
        "title": "Clipboard.ninja",
        "zDepth": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <AppBar
          iconElementLeft={
            <img
              alt="logo"
              height="50px"
              src="ninja.svg"
            />
          }
          iconElementRight={
            <FlatButton
              disabled={false}
              fullWidth={false}
              href="/about.html"
              label="Help"
              labelPosition="after"
              labelStyle={Object {}}
              onClick={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              primary={false}
              secondary={false}
            />
          }
          onTitleClick={[Function]}
          showMenuIconButton={true}
          title="Clipboard.ninja"
          zDepth={1}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "iconElementLeft": <img
            alt="logo"
            height="50px"
            src="ninja.svg"
          />,
          "iconElementRight": <FlatButton
            disabled={false}
            fullWidth={false}
            href="/about.html"
            label="Help"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
          />,
          "onTitleClick": [Function],
          "showMenuIconButton": true,
          "title": "Clipboard.ninja",
          "zDepth": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`renders with a link to Home 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppHeader
    location={
      Object {
        "pathname": "/about.html",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <AppBar
        iconElementLeft={
          <img
            alt="logo"
            height="50px"
            src="ninja.svg"
          />
        }
        iconElementRight={
          <FlatButton
            disabled={false}
            fullWidth={false}
            href="/"
            label="Back"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
          />
        }
        onTitleClick={[Function]}
        showMenuIconButton={true}
        title="Clipboard.ninja"
        zDepth={1}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "iconElementLeft": <img
          alt="logo"
          height="50px"
          src="ninja.svg"
        />,
        "iconElementRight": <FlatButton
          disabled={false}
          fullWidth={false}
          href="/"
          label="Back"
          labelPosition="after"
          labelStyle={Object {}}
          onClick={[Function]}
          onKeyboardFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onTouchStart={[Function]}
          primary={false}
          secondary={false}
        />,
        "onTitleClick": [Function],
        "showMenuIconButton": true,
        "title": "Clipboard.ninja",
        "zDepth": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <AppBar
          iconElementLeft={
            <img
              alt="logo"
              height="50px"
              src="ninja.svg"
            />
          }
          iconElementRight={
            <FlatButton
              disabled={false}
              fullWidth={false}
              href="/"
              label="Back"
              labelPosition="after"
              labelStyle={Object {}}
              onClick={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              primary={false}
              secondary={false}
            />
          }
          onTitleClick={[Function]}
          showMenuIconButton={true}
          title="Clipboard.ninja"
          zDepth={1}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "iconElementLeft": <img
            alt="logo"
            height="50px"
            src="ninja.svg"
          />,
          "iconElementRight": <FlatButton
            disabled={false}
            fullWidth={false}
            href="/"
            label="Back"
            labelPosition="after"
            labelStyle={Object {}}
            onClick={[Function]}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            primary={false}
            secondary={false}
          />,
          "onTitleClick": [Function],
          "showMenuIconButton": true,
          "title": "Clipboard.ninja",
          "zDepth": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
